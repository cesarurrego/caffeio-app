name: Flutter Pipelines

on: push

jobs:
  analyze:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:

      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.3'
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'

      # Get flutter dependencies.
      - run: flutter pub get
      # Check for any formatting issues in the code.
      - run: dart format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      - run: dart analyze .
  test:
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'

      # Run tests for our flutter project.
      - run: flutter test
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable' # 'dev', 'alpha', default to: 'stable'

        # Build apk.
      - run: flutter build apk --dart-define=SUPABASE_KEY="${{ secrets.SUPABASE_KEY }}"

        # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
